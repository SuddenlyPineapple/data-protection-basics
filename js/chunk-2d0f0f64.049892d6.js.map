{"version":3,"sources":["webpack:///./src/components/hashCipher.vue?d14d","webpack:///src/components/hashCipher.vue","webpack:///./src/components/hashCipher.vue?61c1","webpack:///./src/components/hashCipher.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","rules","on","$event","encrypt","clear","model","value","callback","$$v","textToEncrypt","expression","loadTextFromFile","scopedSlots","_u","key","fn","ref","text","_s","fileToEncrypt","staticClass","binary","encryptedText","staticRenderFns","name","props","data","methods","reader","onload","readAsText","file","hash","hashCounter","String","fromCharCode","component","VBtn","VCheckbox","VChip","VCol","VFileInput","VRow","VTextarea"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,QAAQ,CAACE,MAAM,CAAC,KAAO,OAAO,CAACF,EAAG,KAAK,CAACJ,EAAIO,GAAG,yCAAyCH,EAAG,aAAa,CAACE,MAAM,CAAC,MAAQ,cAAc,UAAY,GAAG,aAAa,mBAAmB,MAAQ,0BAA0B,KAAO,IAAI,eAAe,UAAU,MAAQ,CAACN,EAAIQ,OAAO,QAAU,IAAIC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOV,EAAIW,WAAW,cAAc,SAASD,GAAQ,OAAOV,EAAIY,UAAUC,MAAM,CAACC,MAAOd,EAAiB,cAAEe,SAAS,SAAUC,GAAMhB,EAAIiB,cAAcD,GAAKE,WAAW,mBAAmB,CAACd,EAAG,eAAe,CAACE,MAAM,CAAC,YAAc,uBAAuB,MAAQ,wBAAwB,OAAS,OAAO,eAAe,gBAAgB,YAAY,IAAIG,GAAG,CAAC,OAAST,EAAImB,kBAAkBC,YAAYpB,EAAIqB,GAAG,CAAC,CAACC,IAAI,YAAYC,GAAG,SAASC,GACz0B,IAAIC,EAAOD,EAAIC,KACf,MAAO,CAACrB,EAAG,SAAS,CAACE,MAAM,CAAC,MAAQ,GAAG,MAAQ,GAAG,MAAQ,WAAW,CAACN,EAAIO,GAAG,eAAeP,EAAI0B,GAAGD,GAAM,qBAAqBZ,MAAM,CAACC,MAAOd,EAAiB,cAAEe,SAAS,SAAUC,GAAMhB,EAAI2B,cAAcX,GAAKE,WAAW,oBAAoBd,EAAG,QAAQ,CAACwB,YAAY,QAAQ,CAACxB,EAAG,aAAa,CAACwB,YAAY,iBAAiBtB,MAAM,CAAC,MAAQ,cAAc,MAAQ,8EAA8EO,MAAM,CAACC,MAAOd,EAAU,OAAEe,SAAS,SAAUC,GAAMhB,EAAI6B,OAAOb,GAAKE,WAAW,YAAYd,EAAG,QAAQ,CAACwB,YAAY,mBAAmBtB,MAAM,CAAC,MAAQ,eAAeG,GAAG,CAAC,MAAQT,EAAIW,UAAU,CAACX,EAAIO,GAAG,4BAA4B,GAAGH,EAAG,aAAa,CAACE,MAAM,CAAC,MAAQ,cAAc,SAAW,GAAG,QAAU,GAAG,MAAQ,yBAAyB,eAAe,UAAU,YAAc,0CAA0CO,MAAM,CAACC,MAAOd,EAAiB,cAAEe,SAAS,SAAUC,GAAMhB,EAAI8B,cAAcd,GAAKE,WAAW,oBAAoB,IAC37Ba,EAAkB,GC2DtB,G,UAAA,CACEC,KAAM,aACNC,MAAO,CAAC,QAAS,QACjBC,KAAM,WAAR,OACA,UAGA,QAGA,mBACA,iBACA,mBAGEC,QAAS,CACPhB,iBADJ,WACA,WACA,qBACA,iBAGMiB,EAAOC,OAAS,SAAtB,GACQ,EAAR,8BACQ,EAAR,WAEMD,EAAOE,WAAWC,IAEpB5B,QAZJ,WAeM,GAFAV,KAAK6B,cAAgB,GAEH,KAAd7B,KAAKuC,KAGP,IAFA,IAAR,IAEA,qCACU,IAAV,kDAEA,yBACUC,GAAe,EAWXxC,KAAK4B,OACP5B,KAAK6B,gBACjB,6BACA,YAEY7B,KAAK6B,eAAiBY,OAAOC,aACzC,+BAOI/B,MA9CJ,WA+CMX,KAAKgB,cAAgB,GACrBhB,KAAK6B,cAAgB,OC7HyW,I,qHCOhYc,EAAY,eACd,EACA7C,EACAgC,GACA,EACA,KACA,KACA,MAIa,aAAAa,EAAiB,QAWhC,IAAkBA,EAAW,CAACC,OAAA,KAAKC,YAAA,KAAUC,QAAA,KAAMC,OAAA,KAAKC,aAAA,KAAWC,OAAA,KAAKC,YAAA","file":"js/chunk-2d0f0f64.049892d6.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-col',{attrs:{\"cols\":\"12\"}},[_c('h2',[_vm._v(\"Encrypt/decrypt using generated key\")]),_c('v-textarea',{attrs:{\"color\":\"deep-purple\",\"clearable\":\"\",\"clear-icon\":\"mdi-close-circle\",\"label\":\"Text to encrypt/decrypt\",\"rows\":\"2\",\"prepend-icon\":\"mdi-pen\",\"rules\":[_vm.rules],\"counter\":\"\"},on:{\"keyup\":function($event){return _vm.encrypt()},\"click:clear\":function($event){return _vm.clear()}},model:{value:(_vm.textToEncrypt),callback:function ($$v) {_vm.textToEncrypt=$$v},expression:\"textToEncrypt\"}}),[_c('v-file-input',{attrs:{\"placeholder\":\"Upload your txt file\",\"label\":\"File input (Optional)\",\"accept\":\".txt\",\"prepend-icon\":\"mdi-paperclip\",\"show-size\":\"\"},on:{\"change\":_vm.loadTextFromFile},scopedSlots:_vm._u([{key:\"selection\",fn:function(ref){\nvar text = ref.text;\nreturn [_c('v-chip',{attrs:{\"small\":\"\",\"label\":\"\",\"color\":\"purple\"}},[_vm._v(\"\\n          \"+_vm._s(text)+\"\\n        \")])]}}]),model:{value:(_vm.fileToEncrypt),callback:function ($$v) {_vm.fileToEncrypt=$$v},expression:\"fileToEncrypt\"}})],_c('v-row',{staticClass:\"mt-2\"},[_c('v-checkbox',{staticClass:\"mt-0 ml-3 mb-0\",attrs:{\"color\":\"deep-purple\",\"label\":\"Set output to Binary String (default is Binary Text) then Encrypt again =>\"},model:{value:(_vm.binary),callback:function ($$v) {_vm.binary=$$v},expression:\"binary\"}}),_c('v-btn',{staticClass:\"white--text ml-4\",attrs:{\"color\":\"deep-purple\"},on:{\"click\":_vm.encrypt}},[_vm._v(\"\\n      Encrypt\\n    \")])],1),_c('v-textarea',{attrs:{\"color\":\"deep-purple\",\"readonly\":\"\",\"counter\":\"\",\"label\":\"Encrypt/decrypt output\",\"prepend-icon\":\"mdi-eye\",\"placeholder\":\"Encrypted/decrypted text (readonly)...\"},model:{value:(_vm.encryptedText),callback:function ($$v) {_vm.encryptedText=$$v},expression:\"encryptedText\"}})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-col cols=\"12\">\r\n    <h2>Encrypt/decrypt using generated key</h2>\r\n\r\n    <v-textarea\r\n      color=\"deep-purple\"\r\n      clearable\r\n      clear-icon=\"mdi-close-circle\"\r\n      label=\"Text to encrypt/decrypt\"\r\n      rows=\"2\"\r\n      prepend-icon=\"mdi-pen\"\r\n      v-model=\"textToEncrypt\"\r\n      v-on:keyup=\"encrypt()\"\r\n      @click:clear=\"clear()\"\r\n      :rules=\"[rules]\"\r\n      counter\r\n    ></v-textarea>\r\n\r\n    <template>\r\n      <v-file-input\r\n        v-model=\"fileToEncrypt\"\r\n        placeholder=\"Upload your txt file\"\r\n        label=\"File input (Optional)\"\r\n        accept=\".txt\"\r\n        prepend-icon=\"mdi-paperclip\"\r\n        show-size\r\n        @change=\"loadTextFromFile\"\r\n      >\r\n        <template v-slot:selection=\"{ text }\">\r\n          <v-chip small label color=\"purple\">\r\n            {{ text }}\r\n          </v-chip>\r\n        </template>\r\n      </v-file-input>\r\n    </template>\r\n\r\n    <v-row class=\"mt-2\">\r\n      <v-checkbox\r\n        color=\"deep-purple\"\r\n        v-model=\"binary\"\r\n        label=\"Set output to Binary String (default is Binary Text) then Encrypt again =>\"\r\n        class=\"mt-0 ml-3 mb-0\"\r\n      />\r\n\r\n      <v-btn color=\"deep-purple\" class=\"white--text ml-4\" @click=\"encrypt\">\r\n        Encrypt\r\n      </v-btn>\r\n    </v-row>\r\n\r\n    <v-textarea\r\n      color=\"deep-purple\"\r\n      readonly\r\n      counter\r\n      label=\"Encrypt/decrypt output\"\r\n      prepend-icon=\"mdi-eye\"\r\n      placeholder=\"Encrypted/decrypted text (readonly)...\"\r\n      v-model=\"encryptedText\"\r\n    ></v-textarea>\r\n  </v-col>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"hashCipher\",\r\n  props: [\"rules\", \"hash\"],\r\n  data: () => ({\r\n    binary: false,\r\n\r\n    //Logs\r\n    logs: false,\r\n\r\n    //Encryption Variables\r\n    fileToEncrypt: null,\r\n    textToEncrypt: \"\",\r\n    encryptedText: \"\"\r\n  }),\r\n\r\n  methods: {\r\n    loadTextFromFile() {\r\n      const file = this.fileToEncrypt;\r\n      const reader = new FileReader();\r\n\r\n      //reader.onload = e => this.$emit(\"load\", e.target.result);\r\n      reader.onload = e => {\r\n        this.textToEncrypt = e.target.result;\r\n        this.encrypt();\r\n      };\r\n      reader.readAsText(file);\r\n    },\r\n    encrypt() {\r\n      this.encryptedText = \"\";\r\n\r\n      if (this.hash !== \"\") {\r\n        let hashCounter = 0;\r\n\r\n        for (let i = 0; i < this.textToEncrypt.length; i++) {\r\n          const charBits = this.textToEncrypt[i].charCodeAt(0).toString(2);\r\n\r\n          const hashSlice = this.hash.slice(hashCounter, hashCounter + 8);\r\n          hashCounter += 8;\r\n\r\n          // For Debugging Purpose\r\n          // console.log(\r\n          //   charBits,\r\n          //   hashSlice,\r\n          //   (parseInt(charBits, 2) ^ parseInt(hashSlice, 2)).toString(2),\r\n          //   parseInt(charBits, 2) ^ parseInt(hashSlice, 2),\r\n          //   String.fromCharCode(parseInt(charBits, 2) ^ parseInt(hashSlice, 2))\r\n          // );\r\n\r\n          if (this.binary) {\r\n            this.encryptedText += (\r\n              parseInt(charBits, 2) ^ parseInt(hashSlice, 2)\r\n            ).toString(2);\r\n          } else {\r\n            this.encryptedText += String.fromCharCode(\r\n              parseInt(charBits, 2) ^ parseInt(hashSlice, 2)\r\n            );\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    clear() {\r\n      this.textToEncrypt = \"\";\r\n      this.encryptedText = \"\";\r\n    }\r\n  }\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./hashCipher.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./hashCipher.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./hashCipher.vue?vue&type=template&id=0aefab81&\"\nimport script from \"./hashCipher.vue?vue&type=script&lang=js&\"\nexport * from \"./hashCipher.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCheckbox } from 'vuetify/lib/components/VCheckbox';\nimport { VChip } from 'vuetify/lib/components/VChip';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VFileInput } from 'vuetify/lib/components/VFileInput';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTextarea } from 'vuetify/lib/components/VTextarea';\ninstallComponents(component, {VBtn,VCheckbox,VChip,VCol,VFileInput,VRow,VTextarea})\n"],"sourceRoot":""}