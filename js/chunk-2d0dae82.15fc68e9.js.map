{"version":3,"sources":["webpack:///./src/components/ImageEncryption.vue?df72","webpack:///src/components/ImageEncryption.vue","webpack:///./src/components/ImageEncryption.vue?bea8","webpack:///./src/components/ImageEncryption.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","on","loadTextFromFile","scopedSlots","_u","key","fn","ref","text","_s","model","value","callback","$$v","textFile","expression","$event","clear","textToEncrypt","staticClass","error","_e","loadImageFromFile","file","encryptToImage","saveProcessedImage","originalImage","processedImage","staticRenderFns","name","data","methods","loadImageToObject","reader","onload","readAsDataURL","readAsText","processedImageUrl","link","setAttribute","click","component","VBtn","VChip","VCol","VContainer","VFileInput","VRow","VTextarea"],"mappings":"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","file":"js/chunk-2d0dae82.15fc68e9.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('h2',[_vm._v(\"Encryption\")]),[_c('v-file-input',{attrs:{\"placeholder\":\"Upload your txt file\",\"label\":\"File input (Optional)\",\"accept\":\".txt\",\"prepend-icon\":\"mdi-paperclip\",\"show-size\":\"\"},on:{\"change\":_vm.loadTextFromFile},scopedSlots:_vm._u([{key:\"selection\",fn:function(ref){\nvar text = ref.text;\nreturn [_c('v-chip',{attrs:{\"small\":\"\",\"label\":\"\",\"color\":\"purple\"}},[_vm._v(\"\\n              \"+_vm._s(text)+\"\\n            \")])]}}]),model:{value:(_vm.textFile),callback:function ($$v) {_vm.textFile=$$v},expression:\"textFile\"}})],_c('v-textarea',{attrs:{\"color\":\"deep-purple\",\"clearable\":\"\",\"counter\":\"\",\"clear-icon\":\"mdi-close-circle\",\"label\":\"Text to encrypt\",\"rows\":\"2\",\"prepend-icon\":\"mdi-pen\"},on:{\"click:clear\":function($event){return _vm.clear()}},model:{value:(_vm.textToEncrypt),callback:function ($$v) {_vm.textToEncrypt=$$v},expression:\"textToEncrypt\"}}),(_vm.error)?_c('p',{staticClass:\"red--text\"},[_vm._v(_vm._s(_vm.error))]):_vm._e()],2),_c('v-col',{attrs:{\"cols\":\"12\"}},[[_c('v-file-input',{attrs:{\"placeholder\":\"Upload your txt file\",\"label\":\"File input\",\"accept\":\".png, .jpg, .bmp\",\"prepend-icon\":\"mdi-camera\",\"show-size\":\"\"},on:{\"change\":_vm.loadImageFromFile},scopedSlots:_vm._u([{key:\"selection\",fn:function(ref){\nvar text = ref.text;\nreturn [_c('v-chip',{attrs:{\"small\":\"\",\"label\":\"\",\"color\":\"purple\"}},[_vm._v(\"\\n              \"+_vm._s(text)+\"\\n            \")])]}}]),model:{value:(_vm.file),callback:function ($$v) {_vm.file=$$v},expression:\"file\"}})]],2),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-btn',{staticClass:\"white--text\",attrs:{\"color\":\"deep-purple\"},on:{\"click\":function($event){return _vm.encryptToImage()}}},[_vm._v(\"Encrypt Image\")]),_c('v-btn',{staticClass:\"white--text ml-3\",attrs:{\"color\":\"deep-purple\"},on:{\"click\":function($event){return _vm.saveProcessedImage()}}},[_vm._v(\"Save Processed Image\")])],1),(_vm.originalImage)?_c('v-col',{attrs:{\"cols\":\"6\",\"sm\":\"12\",\"md\":\"6\"}},[_c('h5',[_vm._v(\"Original Image\")]),_c('img',{attrs:{\"height\":\"100%\",\"width\":\"100%\",\"src\":_vm.originalImage}})]):_vm._e(),(_vm.processedImage)?_c('v-col',{attrs:{\"cols\":\"6\",\"sm\":\"12\",\"md\":\"6\"}},[_c('h5',[_vm._v(\"Image with encrypted text\")]),_c('img',{attrs:{\"height\":\"100%\",\"width\":\"100%\",\"src\":_vm.processedImage}})]):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container>\r\n    <v-row>\r\n      <v-col cols=\"12\">\r\n        <h2>Encryption</h2>\r\n        <template>\r\n          <v-file-input\r\n            v-model=\"textFile\"\r\n            placeholder=\"Upload your txt file\"\r\n            label=\"File input (Optional)\"\r\n            accept=\".txt\"\r\n            prepend-icon=\"mdi-paperclip\"\r\n            show-size\r\n            @change=\"loadTextFromFile\"\r\n          >\r\n            <template v-slot:selection=\"{ text }\">\r\n              <v-chip small label color=\"purple\">\r\n                {{ text }}\r\n              </v-chip>\r\n            </template>\r\n          </v-file-input>\r\n        </template>\r\n        <v-textarea\r\n          color=\"deep-purple\"\r\n          clearable\r\n          counter\r\n          clear-icon=\"mdi-close-circle\"\r\n          label=\"Text to encrypt\"\r\n          rows=\"2\"\r\n          prepend-icon=\"mdi-pen\"\r\n          v-model=\"textToEncrypt\"\r\n          @click:clear=\"clear()\"\r\n        ></v-textarea>\r\n        <p class=\"red--text\" v-if=\"error\">{{ error }}</p>\r\n      </v-col>\r\n\r\n      <v-col cols=\"12\">\r\n        <template>\r\n          <v-file-input\r\n            v-model=\"file\"\r\n            placeholder=\"Upload your txt file\"\r\n            label=\"File input\"\r\n            accept=\".png, .jpg, .bmp\"\r\n            prepend-icon=\"mdi-camera\"\r\n            show-size\r\n            @change=\"loadImageFromFile\"\r\n          >\r\n            <template v-slot:selection=\"{ text }\">\r\n              <v-chip small label color=\"purple\">\r\n                {{ text }}\r\n              </v-chip>\r\n            </template>\r\n          </v-file-input>\r\n        </template>\r\n      </v-col>\r\n\r\n      <v-col cols=\"12\">\r\n        <v-btn color=\"deep-purple\" class=\"white--text\" @click=\"encryptToImage()\"\r\n          >Encrypt Image</v-btn\r\n        >\r\n        <v-btn\r\n          color=\"deep-purple\"\r\n          class=\"white--text ml-3\"\r\n          @click=\"saveProcessedImage()\"\r\n          >Save Processed Image</v-btn\r\n        >\r\n      </v-col>\r\n\r\n      <v-col cols=\"6\" sm=\"12\" md=\"6\" v-if=\"originalImage\">\r\n        <h5>Original Image</h5>\r\n        <img height=\"100%\" width=\"100%\" :src=\"originalImage\" />\r\n      </v-col>\r\n\r\n      <v-col cols=\"6\" sm=\"12\" md=\"6\" v-if=\"processedImage\">\r\n        <h5>Image with encrypted text</h5>\r\n        <img height=\"100%\" width=\"100%\" :src=\"processedImage\" />\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport _ from \"lodash\";\r\n\r\nexport default {\r\n  name: \"ImageEncrypiton\",\r\n  data: () => ({\r\n    imageToEncrypt: null,\r\n    file: null,\r\n    originalImage: \"\",\r\n    processedImage: \"\",\r\n    textToEncrypt: \"\",\r\n    error: \"\"\r\n  }),\r\n  methods: {\r\n    loadImageToObject() {},\r\n    async encryptToImage() {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let originalImage = new Image();\r\n      originalImage.src = this.imageToEncrypt;\r\n      await originalImage;\r\n\r\n      canvas.width = originalImage.width;\r\n      canvas.height = originalImage.height;\r\n\r\n      this.error = \"\";\r\n      if (\r\n        originalImage.width * originalImage.height * 3 <\r\n        this.textToEncrypt.length * 8\r\n      )\r\n        this.error = \"Error: Text is to long to encrypt on this image.\";\r\n\r\n      if (this.file) this.originalImage = originalImage.src;\r\n\r\n      if (this.textToEncrypt && this.file) {\r\n        let canvasContext = canvas.getContext(\"2d\");\r\n        canvasContext.drawImage(\r\n          originalImage,\r\n          0,\r\n          0,\r\n          originalImage.width,\r\n          originalImage.height\r\n        );\r\n\r\n        let canvasData = canvasContext.getImageData(\r\n          0,\r\n          0,\r\n          originalImage.width,\r\n          originalImage.height\r\n        );\r\n\r\n        //console.log(canvasData);\r\n\r\n        let binaryText = \"\";\r\n        for (let i = 0; i < this.textToEncrypt.length; i++) {\r\n          binaryText += _.padStart(\r\n            this.textToEncrypt[i].charCodeAt(0).toString(2),\r\n            8,\r\n            0\r\n          );\r\n        }\r\n\r\n        //console.log(binaryText);\r\n\r\n        String.prototype.replaceAt = function(index, replacement) {\r\n          return (\r\n            this.substr(0, index) +\r\n            replacement +\r\n            this.substr(index + replacement.length)\r\n          );\r\n        };\r\n\r\n        let binaryCounter = 0;\r\n\r\n        for (var i = 0; i < canvasData.data.length; i += 4) {\r\n          let red = _.padStart(canvasData.data[i].toString(2), 8, 0);\r\n          red = red.replaceAt(7, binaryText[binaryCounter++]);\r\n          canvasData.data[i] = parseInt(red, 2); // red\r\n          //console.log(\"Red: \", red);\r\n          if (binaryCounter >= binaryText.length) break;\r\n\r\n          let green = _.padStart(canvasData.data[i + 1].toString(2), 8, 0);\r\n          green = green.replaceAt(7, binaryText[binaryCounter++]);\r\n          canvasData.data[i + 1] = parseInt(green, 2); // green\r\n          //console.log(\"Green: \", green);\r\n          if (binaryCounter >= binaryText.length) break;\r\n\r\n          let blue = _.padStart(canvasData.data[i + 2].toString(2), 8, 0);\r\n          blue = blue.replaceAt(7, binaryText[binaryCounter++]);\r\n          canvasData.data[i + 2] = parseInt(blue, 2); // blue\r\n          //console.log(\"Blue: \", blue);\r\n          if (binaryCounter >= binaryText.length) break;\r\n        }\r\n\r\n        //console.log(\"Inverted\", canvasData);\r\n        await canvasContext.putImageData(canvasData, 0, 0);\r\n        this.processedImage = canvas.toDataURL();\r\n      }\r\n    },\r\n    loadImageFromFile() {\r\n      const file = this.file;\r\n      const reader = new FileReader();\r\n\r\n      //reader.onload = e => this.$emit(\"load\", e.target.result);\r\n      reader.onload = e => {\r\n        this.imageToEncrypt = e.target.result;\r\n        this.encryptToImage();\r\n      };\r\n      if (this.file) reader.readAsDataURL(file);\r\n      else {\r\n        this.originalImage = \"\";\r\n        this.processedImage = \"\";\r\n      }\r\n    },\r\n    loadTextFromFile() {\r\n      if (this.textFile) {\r\n        const file = this.textFile;\r\n        const reader = new FileReader();\r\n\r\n        //reader.onload = e => this.$emit(\"load\", e.target.result);\r\n        reader.onload = e => {\r\n          this.textToEncrypt = e.target.result;\r\n        };\r\n        reader.readAsText(file);\r\n      }\r\n    },\r\n    clear() {\r\n      this.textToEncrypt = \"\";\r\n      this.processedImageUrl = \"\";\r\n    },\r\n    saveProcessedImage() {\r\n      let link = document.createElement(\"a\");\r\n      link.setAttribute(\"href\", this.processedImage);\r\n      link.setAttribute(\r\n        \"download\",\r\n        \"outImage-r\" + this.textToEncrypt.length + \".png\"\r\n      );\r\n      link.click();\r\n    }\r\n  }\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageEncryption.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageEncryption.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ImageEncryption.vue?vue&type=template&id=20a4c78f&\"\nimport script from \"./ImageEncryption.vue?vue&type=script&lang=js&\"\nexport * from \"./ImageEncryption.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VChip } from 'vuetify/lib/components/VChip';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VFileInput } from 'vuetify/lib/components/VFileInput';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTextarea } from 'vuetify/lib/components/VTextarea';\ninstallComponents(component, {VBtn,VChip,VCol,VContainer,VFileInput,VRow,VTextarea})\n"],"sourceRoot":""}