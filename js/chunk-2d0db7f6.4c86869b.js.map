{"version":3,"sources":["webpack:///./src/components/ImageDecryption.vue?8433","webpack:///src/components/ImageDecryption.vue","webpack:///./src/components/ImageDecryption.vue?e169","webpack:///./src/components/ImageDecryption.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","attrs","on","loadImageFromFile","scopedSlots","_u","key","fn","ref","text","_s","model","value","callback","$$v","file","expression","originalImage","_e","decryptedText","staticRenderFns","name","data","methods","reader","onload","readAsDataURL","processedImage","component","VChip","VCol","VContainer","VFileInput","VRow","VTextarea"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,cAAc,CAACA,EAAG,KAAK,CAACJ,EAAIM,GAAG,gBAAgBF,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACG,MAAM,CAAC,KAAO,OAAO,CAAC,CAACH,EAAG,eAAe,CAACG,MAAM,CAAC,YAAc,uBAAuB,MAAQ,aAAa,OAAS,mBAAmB,eAAe,aAAa,YAAY,IAAIC,GAAG,CAAC,OAASR,EAAIS,mBAAmBC,YAAYV,EAAIW,GAAG,CAAC,CAACC,IAAI,YAAYC,GAAG,SAASC,GAClb,IAAIC,EAAOD,EAAIC,KACf,MAAO,CAACX,EAAG,SAAS,CAACG,MAAM,CAAC,MAAQ,GAAG,MAAQ,GAAG,MAAQ,WAAW,CAACP,EAAIM,GAAG,mBAAmBN,EAAIgB,GAAGD,GAAM,yBAAyBE,MAAM,CAACC,MAAOlB,EAAQ,KAAEmB,SAAS,SAAUC,GAAMpB,EAAIqB,KAAKD,GAAKE,WAAW,YAAY,GAAItB,EAAiB,cAAEI,EAAG,QAAQ,CAACG,MAAM,CAAC,KAAO,IAAI,GAAK,KAAK,GAAK,MAAM,CAACH,EAAG,KAAK,CAACJ,EAAIM,GAAG,kCAAkCF,EAAG,MAAM,CAACG,MAAM,CAAC,OAAS,OAAO,MAAQ,OAAO,IAAMP,EAAIuB,mBAAmBvB,EAAIwB,KAAKpB,EAAG,QAAQ,CAACG,MAAM,CAAC,KAAO,IAAI,GAAK,KAAK,GAAK,MAAM,CAACH,EAAG,aAAa,CAACG,MAAM,CAAC,MAAQ,cAAc,SAAW,GAAG,QAAU,GAAG,MAAQ,iBAAiB,eAAe,UAAU,YAAc,gCAAgCU,MAAM,CAACC,MAAOlB,EAAiB,cAAEmB,SAAS,SAAUC,GAAMpB,EAAIyB,cAAcL,GAAKE,WAAW,oBAAoB,IAAI,IAAI,IAChwBI,EAAkB,G,iEC4CtB,GACEC,KAAM,kBACNC,KAAM,WAAR,OACA,oBACA,UACA,iBACA,mBAEEC,QAAS,CACP,aADJ,sLAEA,mCACA,YACA,0BAJA,SAKA,EALA,OA+BA,IAxBA,gBACA,kBAEA,yBACA,qBACA,YACA,EACA,EACA,EACA,QACA,UAGA,iBACA,EACA,EACA,QACA,UAKA,KAEA,yBACA,0CAGA,4CAGA,4CAGA,uCAKA,wBAEA,wCACA,gCAjDA,yGAqDIpB,kBArDJ,WAqDA,WACA,YACA,iBAGMqB,EAAOC,OAAS,SAAtB,GACQ,EAAR,+BACQ,EAAR,gBAEU9B,KAAKoB,KAAMS,EAAOE,cAAcX,IAElCpB,KAAKsB,cAAgB,GACrBtB,KAAKgC,eAAiB,OCxH2W,I,yGCOrYC,EAAY,eACd,EACAnC,EACA2B,GACA,EACA,KACA,KACA,MAIa,aAAAQ,EAAiB,QAUhC,IAAkBA,EAAW,CAACC,QAAA,KAAMC,OAAA,KAAKC,aAAA,KAAWC,aAAA,KAAWC,OAAA,KAAKC,YAAA","file":"js/chunk-2d0db7f6.4c86869b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('h2',[_vm._v(\"Decryption\")]),_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\"}},[[_c('v-file-input',{attrs:{\"placeholder\":\"Upload your txt file\",\"label\":\"File input\",\"accept\":\".png, .jpg, .bmp\",\"prepend-icon\":\"mdi-camera\",\"show-size\":\"\"},on:{\"change\":_vm.loadImageFromFile},scopedSlots:_vm._u([{key:\"selection\",fn:function(ref){\nvar text = ref.text;\nreturn [_c('v-chip',{attrs:{\"small\":\"\",\"label\":\"\",\"color\":\"purple\"}},[_vm._v(\"\\n              \"+_vm._s(text)+\"\\n            \")])]}}]),model:{value:(_vm.file),callback:function ($$v) {_vm.file=$$v},expression:\"file\"}})]],2),(_vm.originalImage)?_c('v-col',{attrs:{\"cols\":\"6\",\"sm\":\"12\",\"md\":\"6\"}},[_c('h5',[_vm._v(\"Image with encrypted message\")]),_c('img',{attrs:{\"height\":\"100%\",\"width\":\"100%\",\"src\":_vm.originalImage}})]):_vm._e(),_c('v-col',{attrs:{\"cols\":\"6\",\"sm\":\"12\",\"md\":\"6\"}},[_c('v-textarea',{attrs:{\"color\":\"deep-purple\",\"readonly\":\"\",\"counter\":\"\",\"label\":\"Decrypt output\",\"prepend-icon\":\"mdi-eye\",\"placeholder\":\"Decrypted text (readonly)...\"},model:{value:(_vm.decryptedText),callback:function ($$v) {_vm.decryptedText=$$v},expression:\"decryptedText\"}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container>\r\n    <h2>Decryption</h2>\r\n    <v-row>\r\n      <v-col cols=\"12\">\r\n        <template>\r\n          <v-file-input\r\n            v-model=\"file\"\r\n            placeholder=\"Upload your txt file\"\r\n            label=\"File input\"\r\n            accept=\".png, .jpg, .bmp\"\r\n            prepend-icon=\"mdi-camera\"\r\n            show-size\r\n            @change=\"loadImageFromFile\"\r\n          >\r\n            <template v-slot:selection=\"{ text }\">\r\n              <v-chip small label color=\"purple\">\r\n                {{ text }}\r\n              </v-chip>\r\n            </template>\r\n          </v-file-input>\r\n        </template>\r\n      </v-col>\r\n\r\n      <v-col cols=\"6\" sm=\"12\" md=\"6\" v-if=\"originalImage\">\r\n        <h5>Image with encrypted message</h5>\r\n        <img height=\"100%\" width=\"100%\" :src=\"originalImage\" />\r\n      </v-col>\r\n\r\n      <v-col cols=\"6\" sm=\"12\" md=\"6\">\r\n        <v-textarea\r\n          color=\"deep-purple\"\r\n          readonly\r\n          counter\r\n          label=\"Decrypt output\"\r\n          prepend-icon=\"mdi-eye\"\r\n          placeholder=\"Decrypted text (readonly)...\"\r\n          v-model=\"decryptedText\"\r\n        ></v-textarea>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport _ from \"lodash\";\r\n\r\nexport default {\r\n  name: \"ImageDecrypiton\",\r\n  data: () => ({\r\n    imageToDecrypt: null,\r\n    file: null,\r\n    originalImage: \"\",\r\n    decryptedText: \"\"\r\n  }),\r\n  methods: {\r\n    async decryptImage() {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let originalImage = new Image();\r\n      originalImage.src = this.imageToDecrypt;\r\n      await originalImage;\r\n\r\n      canvas.width = originalImage.width;\r\n      canvas.height = originalImage.height;\r\n\r\n      this.originalImage = originalImage.src;\r\n      let canvasContext = canvas.getContext(\"2d\");\r\n      canvasContext.drawImage(\r\n        originalImage,\r\n        0,\r\n        0,\r\n        originalImage.width,\r\n        originalImage.height\r\n      );\r\n\r\n      let canvasData = canvasContext.getImageData(\r\n        0,\r\n        0,\r\n        originalImage.width,\r\n        originalImage.height\r\n      );\r\n\r\n      //console.log(canvasData);\r\n\r\n      let binaryString = \"\";\r\n\r\n      for (let i = 0; i < canvasData.data.length; i += 4) {\r\n        let red = _.padStart(canvasData.data[i].toString(2), 8, 0);\r\n        //console.log(\"Red: \", red);\r\n\r\n        let green = _.padStart(canvasData.data[i + 1].toString(2), 8, 0);\r\n        //console.log(\"Green: \", green);\r\n\r\n        let blue = _.padStart(canvasData.data[i + 2].toString(2), 8, 0);\r\n        //console.log(\"Blue: \", blue);\r\n\r\n        binaryString += red.charAt(7) + green.charAt(7) + blue.charAt(7);\r\n      }\r\n\r\n      //console.log(binaryString);\r\n\r\n      for (let i = 0; i < binaryString.length; i += 8) {\r\n        //console.log(binaryString.substring(i, i + 8));\r\n        this.decryptedText += String.fromCharCode(\r\n          parseInt(binaryString.substring(i, i + 8), 2)\r\n        );\r\n      }\r\n    },\r\n    loadImageFromFile() {\r\n      const file = this.file;\r\n      const reader = new FileReader();\r\n\r\n      //reader.onload = e => this.$emit(\"load\", e.target.result);\r\n      reader.onload = e => {\r\n        this.imageToDecrypt = e.target.result;\r\n        this.decryptImage();\r\n      };\r\n      if (this.file) reader.readAsDataURL(file);\r\n      else {\r\n        this.originalImage = \"\";\r\n        this.processedImage = \"\";\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageDecryption.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ImageDecryption.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ImageDecryption.vue?vue&type=template&id=b96ec028&\"\nimport script from \"./ImageDecryption.vue?vue&type=script&lang=js&\"\nexport * from \"./ImageDecryption.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VChip } from 'vuetify/lib/components/VChip';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VFileInput } from 'vuetify/lib/components/VFileInput';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTextarea } from 'vuetify/lib/components/VTextarea';\ninstallComponents(component, {VChip,VCol,VContainer,VFileInput,VRow,VTextarea})\n"],"sourceRoot":""}